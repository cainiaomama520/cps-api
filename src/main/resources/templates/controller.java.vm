package ${package.Controller};


import org.springframework.web.bind.annotation.RequestMapping;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import com.baomidou.mybatisplus.plugins.Page;
import com.mex.pdd.base.common.utils.PageQuery;
import org.springframework.http.ResponseEntity;
import java.util.Arrays;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(description = "$!{table.comment}管理", tags = {"$!{table.comment}"})
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

        @PostMapping("/${table.entityPath}-list")
        @ApiOperation(value = "列表")
        public ResponseEntity<Page<${entity}>> list(@RequestBody PageQuery<${entity}> pageQuery) {
            Page<${entity}> page = ${table.entityPath}Service.selectPage(pageQuery);
            return ResponseEntity.ok(page);
        }

        @GetMapping("/${table.entityPath}/{id}")
        @ApiOperation(value = "详情")
        public ResponseEntity<${entity}> info(@PathVariable("id") Long id) {
            ${entity} ${table.entityPath} = ${table.entityPath}Service.selectById(id);
            return ResponseEntity.ok(${table.entityPath});
        }

        @PostMapping("/${table.entityPath}")
        @ApiOperation(value = "保存")
        public ResponseEntity<Boolean> save(@RequestBody ${entity} ${table.entityPath}) {
            boolean b = ${table.entityPath}Service.insert(${table.entityPath});
            return ResponseEntity.ok(b);
        }

        @PutMapping("/${table.entityPath}")
        @ApiOperation(value = "修改")
        public ResponseEntity<Boolean> update(@RequestBody ${entity} ${table.entityPath}) {
            boolean b = ${table.entityPath}Service.updateById(${table.entityPath});
            return ResponseEntity.ok(b);
        }

        @DeleteMapping("/${table.entityPath}/{ids}")
        @ApiOperation(value = "删除")
        public ResponseEntity<Boolean> delete(@PathVariable("ids") Long[] ids) {
            boolean b = ${table.entityPath}Service.deleteBatchIds(Arrays.asList(ids));
            return ResponseEntity.ok(b);
        }

}
